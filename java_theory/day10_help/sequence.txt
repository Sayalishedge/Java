
Code generated in enum
eg : public enum Color
{
 RED,GREEN,BLUE
}

Additional Code generated by javac : 
public static final Color RED,GREEN,BLUE;
static {
  RED=new Color("RED",0);
....
BLUE=new Color("BLUE",2);
}

Revise n complete  
Showroom management system


How will you add this validation rule ?
No dup vehicles should be added in the showroom

public static void checkForDup(String chNo,Vehicle[] vehicles) throws ....
{
Vehicle newVehicle=new Vehicle(chNo);
  for (Vehicle v : vehicles)
   if(v != null)
    if(v.equals(newVehicle))
     throw new InvalidInputException("Dup vehicle !!!!!");
  sop("no dups !!!!");
 
}



Enter generics 
Objevtive :
Create a Holder class , which can hold ANY (i.e primitive or ref type) type of the data member.
Understand the dis advantages.


1. Generics : refer to readme
What is it ? : Paramterized types
Applicable for : classes , interfaces, enums , methods , constrs.

Why ? 
To Add type safety at the compile time
1. Avoids explicit type casting
2. Type mismatch errors are caught at the compile time


2. Collection Framework Overview

Enter : List implementation classes : ArrayList

Simple Objective :
Create empty list of integers.
Populate it with some values : 10 , 20 , 30 ,40 ,50
Display the list : using toString n for-each
get a particular element
Search for the specific element : contains 
indexOf , lastIndexOf
chk if the list(AL) is it growable : append / insert
delete element


Objective 

1. Create empty AL to store vehicles in a showroom

2. Accept  vehicle details from user n store it in AL(along with validation rules)

2.5 After testing vehicle registration in showroom , add sample data to store 5 vehicles in the showroom.(for quick testing)

3. Display all vehicle details
Using for-each & also using Iterator(later)

4. Fetch Vehicle details from AL
i/p : PK (chasis no)
o/p : in case of success : display vehicle details o.w throw custom exception
API : indexOf , get

5. Update Vehicle price
i/p : chasis no & new price
o/p : in case of success : update vehicle details o.w throw custom exception

6. Delete vehicle details
i/p : chasis no

7. Apply discount to all vehicles manufactured before a specific date
i/p :  date n discount


8. Sort the vehicles as per asc order of chasis no (use natural ordering)

9. Sort the vehicles as per desc  order of  price (use custom ordering)

10. Sort the vehicles as per desc  order of  price (use custom ordering)

0. Exit

